seq(1,20)
seq(0,10,by=0.5)
?seq
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect<-c(0.5,55,-10,6)
num_vect <1
tf <- num_vect <1
tf
num_vect >=6
my_char <- c('My', 'name', 'is')
my_char
paste(my_char, collapse=" ")
c(my_char, 'sonyfe25cp')
my_name <-c(my_char, 'sonyfe25cp')
my_name
paste(my_char, collapse=" ")
paste(my_name, collapse=" ")
paste('hello', 'world!', sep=" ")
paste("hello", "world!", sep=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X", "Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
a<- c(44,NA,5,NA)
x <- c(44,NA,5,NA)
x *3
y <- rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z))
my_data<-sample(c(y,z), 100)
my_na <-is.na(my_data)
my_na
my_data
my_data == NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[3]
c(x[3],x[5],x[7])
c(3,5,7)
?c
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[c(2,10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <-data.frame(patients, my_matirx)
my_data <-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "")
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
names(my_data) <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
printm<-function(x){}
if(x>0) print()
printm2<- function(x){}
printm2<- function(x){
if(is.na(x)) print("x is missing")
else fi(x>0) print("x greater than 0")
mean(x)
mean(ds)
traceback()
debug()
trace()
recover
lm(y~x)
lm(y-x)
lm(sd - ds)
traceback()
debug(lm)
lm(ds-sd)
n
library(datasets)
data(iris)
?iris
mean(Sepal.Length)
iris
apply(iris['Species'])
iris$Species == virginica
iris$Species == 'virginica'
iris[iris$Species == 'virginica']
subset[iris, iris$Species == 'virginica']
class(iris)
iris$Species == 'virginica'
cod <-iris$Species == 'virginica'
iris[cod]
subset(iris, cod)
sub <-subset(iris, cod)
mean(sub$Sepal.Length)
?apply
library(datasets)
data(mtcars)
?mtcars
mtcars
apply(mtcars, 2 mean)
apply(mtcars, 2 ,mean)
with(mtcars, tapply(mpg, cyl, mean))
?with
library(datasets)
data(mtcars)
sapply(mtcars, cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
mtcars
mean(mtcars$mpg, mtcars$cyl)
tapply(mpg, cyl, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
r<-with(mtcars, tapply(mpg, cyl, mean))
r
r$8-r$4
names(r)
r[3]-r[1]
debug(ls)
ls
ls()
n
v<- c(1:20)
dim(v, 4,5)
ma<- matrix()
ma
?matrix
ma <- matrix(c(1:20), nrow=4, ncol=5)
ma
dim(ma)
solve(ma)
ma <- matrix(c(1:25), nrow=5, ncol=5)
solve(ma)
ma
ma <- matrix(c(1:36), nrow=6, ncol=6)
solve(ma)
set.seed(1)
rpois(5.2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1);rpois(5,2)
?ppois
library(datasets)#
Rprof()#
fit <- lm(y ~ x1 + x2)#
Rprof(NULL)
system.tim(readLines("http://www.baidu.com"))
system.time(readLines("http://www.baidu.com"))
system.time(readLines("http://www.facebook.com"))
same.interval=1000
sample.interval=1000
ly(y~x)
lm(y~x)
a<- "i have i dream"
a.contains("have")
?contains
??contains
?has
ls()
path
folder;
folder
data(USArrests)
head(USArrests)
USArrests["Pennsylvania"]
USArrests["Pennsylvania",]
min(USArrests$murder)
min(USArrests$Murder)
which(USArrests$Murder == 0.8)
USArrests[34,]
USArrests[34,1]
name(USArrests[34,])
names(USArrests[34,])
wrong.data = data.frame(contr = c(22,18,25,25,20),#
                        treat1 = c(32,35,30,42,31),#
                        treat2 = c(30,28,25,22,33))
wrong.data
stack
stack(wrong.data) -> correct.data
correct.data
data(anorexia, package="MASS")
anorexia[c(1,2,3,27,28,29,56,57,58),] -> anor
anor
a<- "i have i dream"
"have " %in% a
"have" %in% a
a
any(a == "have")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
2
submit()
submit()
3
submit()
submit()
5
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
8+8+11+9+11+12+10+6
9+7+14+11+9+11
8+5+9+9+8+16+6
14+16+13+10+13+14+4
?data
